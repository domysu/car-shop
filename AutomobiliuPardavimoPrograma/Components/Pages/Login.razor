@page "/register"
@using AutomobiliuPardavimoPrograma.Models;
@using AutomobiliuPardavimoPrograma.Services;
@using Microsoft.AspNetCore.Identity;
@rendermode InteractiveServer
@inject AppDbContext db
@inject UserService UserService
@inject NavigationManager Navigation

<PageTitle>Login In</PageTitle>
 
<div class="min-h-screen flex items-center justify-center  px-4">
  <div class="w-full max-w-md bg-white p-8 rounded-lg shadow-lg">
    @if(showNotification)
    {
      
    
    <div class="text-center bg-green-200 text-white">
    

    </div>
  
    }
    <h2 class="text-2xl font-bold mb-6 text-slate-700 text-center">Register</h2>
    
    <EditForm >
    <DataAnnotationsValidator />
    <ValidationSummary />

  <div class="mb-4">
    <label class="text-sm font-medium text-slate-700 mb-1" for="name">Full Name</label>
    <InputText id="name" @bind-Value="" class="w-full px-4 py-2 border border-slate-300 rounded-md" />
  </div>

  <div class="mb-4">
    <label class="text-sm font-medium text-slate-700 mb-1" for="email">Email</label>
    <InputText id="email" type="email" @bind-Value="" class="w-full px-4 py-2 border border-slate-300 rounded-md" />
  </div>

  <div class="mb-6">
    <label class="text-sm font-medium text-slate-700 mb-1" for="password">Password</label>
    <InputText id="password" type="password" @bind-Value="" class="w-full px-4 py-2 border border-slate-300 rounded-md" />
  </div>

  <button type="submit" class="w-full bg-amber-400 hover:bg-amber-500 text-white font-semibold py-2 rounded-md transition">
    Registers
  </button>
</EditForm>

    <p class="mt-4 text-sm text-center text-slate-500">
      Already have an account?
      <a href="/login" class="text-amber-500 hover:underline">Login here</a>
    </p>
  </div>
</div>

  






@code {


private Vartotojas NaujasVartotojas = new();
private PasswordHasher<Vartotojas> hasher = new();

private bool showNotification = false;

private async Task registerUser()
{
NaujasVartotojas.SlaptazodisHash = hasher.HashPassword(NaujasVartotojas, NaujasVartotojas.RawPassword);
Console.WriteLine(NaujasVartotojas.SlaptazodisHash);
await UserService.PridetiAsync(NaujasVartotojas);
NaujasVartotojas = new();
showNotification = true;

StateHasChanged();

await Task.Delay(1500);
Navigation.NavigateTo("/cars");


}

}

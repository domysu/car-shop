@using AutomobiliuPardavimoPrograma.Models
@using Microsoft.AspNetCore.Components.Forms
@using AutomobiliuPardavimoPrograma.Services
@inject CarService CarService
@rendermode InteractiveServer
@inject IWebHostEnvironment _env

<Modal class="" @ref="modalRef">
  <ModalContent Size="ModalSize.Fullscreen" Class="h-max">
    
    <ModalHeader class="ml-5">
      <ModalTitle>Pridėti skelbimą</ModalTitle>
      <CloseButton />
    </ModalHeader>
    
    <EditForm Model="NaujasAutomobilis"
              OnValidSubmit="HandleSubmit"
              OnInvalidSubmit="HandleInvalidSubmit"
              class="grid grid-cols-3 gap-3 ml-10">
      
      <DataAnnotationsValidator />

      
      <!-- Column 1 -->
      <div class="col-span-1">
        <Field Class="">
          <FieldLabel>Automobilio markė *</FieldLabel>
          <InputText @bind-Value="NaujasAutomobilis.Marke"
                    class="max-w-xs p-2.5 text-black rounded-lg opacity-70 bg-slate-100 border-slate-400 border-1"
                    Placeholder="Įveskite markę" />
       
        </Field>
        
        <Field>
          <FieldLabel>Automobilio modelis *</FieldLabel>
          <InputText @bind-Value="NaujasAutomobilis.Modelis"
                    class="max-w-xs p-2.5 text-black rounded-lg opacity-70 bg-slate-100 border-slate-400 border-1"
                    Placeholder="Įveskite modelį" />
      
        </Field>
        
        <Field>
          <FieldLabel>Automobilio gaminimo metai *</FieldLabel>
          <InputNumber min="1885" max="2027" @bind-Value="NaujasAutomobilis.Metai"
                    class="max-w-xs  text-black rounded-lg opacity-70 bg-slate-100 border-slate-400"
                    Placeholder="Įveskite gaminimo metus" />
        
        </Field>
        
        <Field>
          <FieldLabel>Automobilio kaina (€) *</FieldLabel>
          <InputNumber min="0" @bind-Value="NaujasAutomobilis.Kaina"
                    class="max-w-xs text-black rounded-lg opacity-70 bg-slate-100 border-slate-400"
                    Placeholder="Įveskite kainą" />
      
        </Field>
      </div>
      
      <!-- Column 2 -->
      <div class="col-span-1">
        <Field>
          <FieldLabel>Automobilio rida (km) *</FieldLabel>
          <InputNumber min="0" max="3000000" @bind-Value="NaujasAutomobilis.Rida"
                    class="max-w-xs text-black rounded-lg opacity-70 bg-slate-100 border-slate-400"
                    Placeholder="Įveskite ridą" />
        </Field>
       
        
        <Field>
          <FieldLabel>Automobilio kuro tipas *</FieldLabel>
         <InputSelect class="max-w-[215px] w-full p-2.5 text-black rounded-lg opacity-70 bg-slate-100 border-slate-400 border-1" @bind-Value="NaujasAutomobilis.KuroTipas">
                <option value="Benzinas">Benzinas</option>
                <option value="Dyzelis">Dyzelis</option>
                <option value="Elektra">Elektra</option>
                <option value="Hybridas">Hybridas</option>
            </InputSelect>
         
        </Field>
        <Field>
          <FieldLabel>Automobilio pavarų dėžė *</FieldLabel>
          <InputSelect class="max-w-[215px] w-full p-2.5 text-black rounded-lg opacity-70 bg-slate-100 border-slate-400 border-1" @bind-Value="NaujasAutomobilis.PavaruDeze">
                <option value="Mechanine">Mechanine</option>
                <option value="Automatine">Automatine</option>
            </InputSelect>
        </Field>
        
        <Field>
          <FieldLabel>Aprašymas</FieldLabel>
          <InputTextArea @bind-Value="NaujasAutomobilis.Aprasymas"
                    class="max-w-xs w-full text-black rounded-lg opacity-70 bg-slate-100 border-slate-400 border-1"/>

        </Field>
     
        
      </div>
      
      <!-- Column 3: image + file -->
      <Field Class="col-span-1 w-full h-80 rounded-md">
        @if (previews?.Any() == true)
    {
    
      @foreach (var src in previews)
      {
        <img src="@src" class="object-cover w-full h-40 rounded-md" />
      }
      }
        <button class="relative bg-amber-300 px-3 py-2 mt-3">
          Pridėti nuotraukas
          <InputFile multiple class="opacity-0 h-auto w-auto absolute right-0 bottom-0 top-0 left-0"
                     OnChange="OnFilesChanged" />
        </button>
      </Field>
        <p class="col-span-3 text-sm text-blue-600">
        @SubmitStatus
        </p>
      
      <!-- Footer -->
      <ModalFooter class="col-span-3">
        <Button Color="Color.Secondary"
                Clicked="@HideModal">
          Close
        </Button>
        <button type="submit" class="col-start-3 ml-2 px-4 py-2 bg-green-500 text-white rounded">
      Save (native)
    </button>
      </ModalFooter>
      
    </EditForm>
    
  </ModalContent>
</Modal>

@code {
    private string SubmitStatus = "Not yet submitted!";
    private List<string> previews = new();
    private Modal modalRef;
    [Parameter]
    public int CurrentUserId {get;set;}

  private Automobilis NaujasAutomobilis = new Automobilis{
    KuroTipas = "Benzinas",
    PavaruDeze = "Mechanine",
  };

  public Task ShowModal()
  {
    
    return modalRef.Show();
  }

  public Task HideModal() => modalRef.Hide();

  private async Task HandleSubmit()
  {
    Console.WriteLine("Trying to call handlevalidsubmit..");
    NaujasAutomobilis.CreatedById = CurrentUserId;
    await CarService.PridetiAsync(NaujasAutomobilis);
    SubmitStatus = "Item Added!";
    await HideModal();
  }

  private async Task HandleInvalidSubmit(EditContext _) 
  {
    Console.WriteLine("Trying to call handleinvalidsubmit..");
    SubmitStatus = "Something went wrong!";
      return ;
   
  }

   private async Task OnFilesChanged(InputFileChangeEventArgs e)
  {
    // clear old
    previews.Clear();
    

    // ensure folder
    var uploads = Path.Combine(_env.WebRootPath, "uploads");
    Directory.CreateDirectory(uploads);

    // limit per file, e.g. 2 MB
    var maxBytes = 2 * 1024 * 1024;
    

    foreach (var file in e.GetMultipleFiles())
    {
      // generate unique name
      var fileName = $"{Guid.NewGuid()}_{file.Name}";
      var filePath = Path.Combine(uploads, fileName);

      // read & save
      await using var stream = file.OpenReadStream(maxBytes);
      Console.WriteLine(stream);
      using var ms = new MemoryStream();
      await stream.CopyToAsync(ms);
      await File.WriteAllBytesAsync(filePath, ms.ToArray());
     
      // build preview URL + model binding
      var previewUrl = $"data:{file.ContentType};base64,"
                       + Convert.ToBase64String(ms.ToArray());
      previews.Add(previewUrl);
       StateHasChanged();
      // store relative URL for later display / database
      NaujasAutomobilis.Nuotraukos.Add($"/uploads/{fileName}");
    }
  }
}
